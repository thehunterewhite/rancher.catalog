.catalog:
  name: Kubernetes
  version: v1.12.5-rancher1-1-1
  description: Rancher Kubernetes service
  minimum_rancher_version: v1.6.26-rc1
  maximum_rancher_version: v1.6.26-rc1
  questions:
  - variable: CONSTRAINT_TYPE
    label: Plane Isolation
    description: Isolate the data, orchestration and compute planes via host labels. Set to required when running in production.
    required: true
    default: none
    type: enum
    options:
    - none
    - required
  - variable: CLOUD_PROVIDER
    label: Cloud Provider
    description: The cloud provider on which Kubernetes is running
    required: true
    default: rancher
    type: enum
    options:
     - rancher
     - aws
     - azure
  - variable: AZURE_CLOUD
    label: Azure Cloud Environment
    description: The Azure Cloud environment identifier.
    required: false
    default: AzurePublicCloud
    type: enum
    options:
      - AzurePublicCloud
      - AzureUSGovernmentCloud
      - AzureChinaCloud
      - AzureGermanCloud
  - variable: AZURE_TENANT_ID
    label: Azure Tenant ID
    description: The Azure Active Directory Tenant ID for the Azure Subscription where the cluster will be deployed.
    required: false
    default: ""
    type: string
  - variable: AZURE_CLIENT_ID
    label: Azure Client ID
    description: The Client ID for an Azure Active Directory application with access to talk to Azure APIs.
    required: false
    default: ""
    type: string
  - variable: AZURE_CLIENT_SECRET
    label: Azure Client Secret
    description: The Client Secret for an Azure Active Directory application with access to talk to Azure APIs.
    required: false
    default: ""
    type: string
  - variable: AZURE_SEC_GROUP
    label: Azure Security Group
    description: The Azure Security Group for the hosts in the cluster. This is required for Azure Load Balancer to work. In case you provisioned your hosts using the Rancher Machine drvier for Azure, you will need to use the Azure Portal to edit the hosts' Security Group to the one selected here. Only hosts expected to be Load Balancer Backends need to be in this group.
    required: false
    type: string
    default: ""
  - variable: RBAC
    description: Enable Kubernetes role-based access control with integrated Rancher authentication.
    label: Kubernetes RBAC
    required: true
    default: false
    type: boolean
  - variable: REGISTRY
    description: "The registry to pull addon images and the optional pod infra container image. This should be set to the private registry from which the images for addon-services (i.e. helm, heapster, dashboard, dns) and the pod infra container image should be pulled. ( Default: docker.io )."
    label: Private Registry for Add-Ons and Pod Infra Container Image
    required: false
    default: ""
    type: string
  - variable: BASE_IMAGE_NAMESPACE
    description: "Repository for Add-Ons and Pod Infra Container Image ( Default: rancher )."
    label: Repository for Add-Ons and Pod Infra Container Image
    required: false
    default: ""
    type: string
  - variable: POD_INFRA_CONTAINER_IMAGE
    label: Pod Infra Container Image
    description: The image whose network/ipc namespaces containers in each pod will use. It uses kubelet default if left empty. Do not add the private registry to this field, update the `Private Registry for Add-Ons and Pod Infra Container Image` field with the registry information.
    required: false
    default: "rancher/pause-amd64:3.0"
    type: string
  - variable: HTTP_PROXY
    description: "To be used when Kubernetes services are deployed on host(s) behind a proxy, i.e.: http(s)://<fqdn>:<port>"
    label: HTTP proxy to be used by Kubernetes services
    required: false
    type: string
  - variable: NO_PROXY
    description: Comma separated string used to be excluded from the proxy
    label: no_proxy to be used by Kubernetes services
    required: false
    default: rancher.internal,cluster.local,rancher-metadata,rancher-kubernetes-auth,kubernetes,169.254.169.254,169.254.169.250,10.42.0.0/16,10.43.0.0/16
    type: string
  - variable: ENABLE_ADDONS
    label: Enable Kubernetes Add-ons
    description: Setting this to `false` will disable Dashboard, Helm, SkyDNS, and other Kubernetes add-on services. This is meant for advanced users who want to deploy custom versions of these add-ons.
    required: true
    default: true
    type: boolean
  - variable: ENABLE_RANCHER_INGRESS_CONTROLLER
    description: Deploy the Rancher ingress controller which automatically provisions Rancher load balancers in response to Kubernetes ingress creation events.
    label: Enable Rancher Ingress Controller
    required: true
    default: true
    type: boolean
  - variable: RANCHER_LB_SEPARATOR
    description: Separator used in Rancher LB names generated by ingress controller
    label: Rancher LB name separator
    required: false
    default: rancherlb
    type: string
  - variable: DNS_REPLICAS
    description: Number of replicas for SKY DNS service. Each replica would run on the separate host, so change the value according to your infrastructure.
    label: Sky DNS service scale
    required: false
    default: 1
    type: int
  - variable: ADDITIONAL_KUBELET_FLAGS
    label: Additional Kubelet Flags
    required: false
    type: string
  - variable: ADDITIONAL_KUBEPROXY_FLAGS
    label: Additional Kubernetes Proxy Flags
    required: false
    type: string
  - variable: ADDITIONAL_KUBEAPI_FLAGS
    label: Additional Kubernetes API server Flags
    required: false
    type: string
  - variable: ADDITIONAL_KUBESCHEDULER_FLAGS
    label: Additional Kubernetes Scheduler Flags
    required: false
    type: string
  - variable: ADDITIONAL_KUBECONTROLLERMANAGER_FLAGS
    label: Additional Kubernetes Controller Manager Flags
    required: false
    type: string
  - variable: FAIL_ON_SWAP
    label: Fail on swap
    description: Kubelet will fail if swap is enabled on the host.
    default: false
    type: enum
    options:
      - true
      - false
    required: true
  - variable: ADDONS_LOG_VERBOSITY_LEVEL
    label: Log versions level for Kubernetes Add-ons
    description: Log verbosity level for the Kubernetes Add-ons. Numbers 0-4 are debug-level logs, and 5-10 are trace-level logs.
    default: 2
    type: enum
    options:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
    required: false
  - variable: AUDIT_LOGS
    description: Enable Audit logs to stdout for the kube-apiserver
    label: Audit Logs
    required: false
    default: false
    type: boolean
  - variable: ADMISSION_CONTROLLERS
    description: Admission controllers intercept requests to the Kubernetes API server after they are authenticated and authorized. Admission controllers validate and/or mutate objects in the requests before they are persisted, and they are processed in order.
    label: Kubernetes Admission controllers
    required: false
    default:  NamespaceLifecycle,LimitRanger,ServiceAccount,PersistentVolumeLabel,DefaultStorageClass,DefaultTolerationSeconds,ResourceQuota
    type: string
  - variable: SERVICE_CLUSTER_CIDR
    label: Service Cluster IP Range
    description: A CIDR notation IP range from which to assign service cluster IPs. This must not overlap with any IP ranges assigned to the cluster pod IP CIDR (10.42.0.0/16).
    required: true
    default: "10.43.0.0/16"
    type: string
  - variable: DNS_CLUSTER_IP
    label: KubeDNS cluster IP
    description: The IP address assigned to kubedns service. This must be within the range of Service Cluster IP CIDR.
    required: true
    default: "10.43.0.10"
    type: string
  - variable: KUBEAPI_CLUSTER_IP
    label: KubeAPI cluster IP for TLS certificate
    description: This is the IP address that will be added as a SAN to the TLS certificate for kubernetes api, this must matches the IP of the kubernetes master service which is the first IP of the Service Cluster IP CIDR.
    required: true
    default: "10.43.0.1"
    type: string
  - variable: KUBERNETES_CIPHER_SUITES
    label: Kubernetes cipher suites
    description: A comma-separated list of TLS cipher suites to be used by kubernetes api server and kubelet. Available values can be found in (https://golang.org/pkg/crypto/tls/#pkg-constants). The default list is a list of the currently most secure cipher suites.
    required: true
    default: "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305"
    type: string
  - variable: DASHBOARD_CPU_LIMIT
    label: Kubernetes Dashboard CPU limit
    description: This is the CPU allocated for the Dashboard pod. The same value is used for resource request and resource limit.
    required: false
    default: 100m
    type: string
  - variable: DASHBOARD_MEMORY_LIMIT
    label: Kubernetes Dashboard memory limit
    description: This is the memory allocated for the Dashboard pod. The same value is used for resource request and resource limit. If you have a large number of pods, you should increase this over the default value.
    required: false
    default: 300Mi
    type: string
  - variable: INFLUXDB_HOST_PATH
    label: InfluxDB Host Path
    description: "Write Heapster metrics to an absolute path on the host. This may be network-attached storage."
    required: false
    type: string
  - variable: EMBEDDED_BACKUPS
    label: Enable Backups
    description: "Periodically backup state to /var/etcd/backups. Mount network storage here on all hosts before continuing"
    required: true
    default: true
    type: boolean
  - variable: BACKUP_PERIOD
    label: Backup Creation Period
    description: Create a backup after this amount of time passes. Must conform to duration format
    required: true
    default: 15m0s
    type: string
  - variable: BACKUP_RETENTION
    label: Backup Retention Period
    description: Expire a backup after this amount of time passes. Must conform to duration format
    required: true
    default: 24h
    type: string
  - variable: ETCD_HEARTBEAT_INTERVAL
    label: Etcd Heartbeat Interval
    description: Time (in milliseconds) of a heartbeat interval.
    required: true
    default: 500
    type: int
  - variable: ETCD_ELECTION_TIMEOUT
    label: Etcd Election Timeout
    description: Time (in milliseconds) for an election to timeout.
    required: true
    default: 5000
    type: int
  - variable: RANCHER_METADATA_ADDRESS
    label: Address of Rancher Metadata
    description: The hostname or IP address Rancher metadata can be accessed on
    required: true
    default: "169.254.169.250"
    type: string
  - variable: CLOUD_PROVIDER_CONFIG
    label: Kubernetes cloud provider config file content
    description: The contents for the cloud provider config file (for Azure and AWS only)
    required: false
    type: multiline

kubernetes:
    metadata:
        sans:
        - "IP:${KUBEAPI_CLUSTER_IP}"
        - "kubernetes.default.svc.cluster.local"
        - "kubernetes.default.svc.cluster"
        - "kubernetes.default.svc"
    health_check:
        port: 6443
        interval: 2000
        response_timeout: 2000
        unhealthy_threshold: 3
        healthy_threshold: 2
        initializing_timeout: 60000
        reinitializing_timeout: 60000
    retain_ip: true

etcd:
    metadata:
        sans:
        - "IP:127.0.0.1"
        - "localhost"
        - "etcd.kubernetes.rancher.internal"
        - "kubernetes-etcd-1"
        - "kubernetes-etcd-2"
        - "kubernetes-etcd-3"
        - "kubernetes-etcd-4"
        - "kubernetes-etcd-5"
    retain_ip: true
    scale_policy:
        increment: 1
        max: 3
        min: 1
    health_check:
        port: 2378
        interval: 5000
        response_timeout: 3000
        unhealthy_threshold: 3
        healthy_threshold: 2
        initializing_timeout: 600000
        reinitializing_timeout: 120000
        recreate_on_quorum_strategy_config:
            quorum: 2
        strategy: recreateOnQuorum

rancher-kubernetes-agent:
    health_check:
        request_line: GET /healthcheck HTTP/1.0
        port: 10240
        interval: 2000
        response_timeout: 2000
        unhealthy_threshold: 3
        healthy_threshold: 2
        initializing_timeout: 60000
        reinitializing_timeout: 60000

scheduler:
    health_check:
        request_line: GET /healthz HTTP/1.0
        port: 10251
        interval: 2000
        response_timeout: 2000
        unhealthy_threshold: 3
        healthy_threshold: 2
        initializing_timeout: 60000
        reinitializing_timeout: 60000

controller-manager:
    health_check:
        request_line: GET /healthz HTTP/1.0
        port: 10252
        interval: 2000
        response_timeout: 2000
        unhealthy_threshold: 3
        healthy_threshold: 2
        initializing_timeout: 60000
        reinitializing_timeout: 60000

kubectld:
    health_check:
        port: 10240
        interval: 2000
        response_timeout: 2000
        unhealthy_threshold: 3
        healthy_threshold: 2
        initializing_timeout: 60000
        reinitializing_timeout: 60000
